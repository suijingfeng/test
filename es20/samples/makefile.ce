##############################################################################
#
#    Copyright 2012 - 2013 Vivante Corporation, Sunnyvale, California.
#    All Rights Reserved.
#
#    Permission is hereby granted, free of charge, to any person obtaining
#    a copy of this software and associated documentation files (the
#    'Software'), to deal in the Software without restriction, including
#    without limitation the rights to use, copy, modify, merge, publish,
#    distribute, sub license, and/or sell copies of the Software, and to
#    permit persons to whom the Software is furnished to do so, subject
#    to the following conditions:
#
#    The above copyright notice and this permission notice (including the
#    next paragraph) shall be included in all copies or substantial
#    portions of the Software.
#
#    THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
#    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
#    IN NO EVENT SHALL VIVANTE AND/OR ITS SUPPLIERS BE LIABLE FOR ANY
#    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
##############################################################################


#
# ROOT DIRECTORY
#
ROOT_DIR = $(AQROOT)\sdk\samples\vdk\es20\samples

!IF "$(_TGTCPU)"=="ARMV4I"
#
# ARMV4I CPU
#
CPUFLAGS = \
  /QRarch4T /QRinterwork-return /DTHUMBSUPPORT /D_ARM_ /DARM /DARMV4I
LFLAGS = /MACHINE:THUMB

!ELSEIF "$(_TGTCPU)"=="x86"
#
# X86 CPU
#
CPUFLAGS = /Dx86 /D_X86_ /DEMULATOR /Ix86
LFLAGS = /MACHINE:X86

!ELSE
!MESSAGE Unknown CPU!
!ENDIF

#
# C FLAGS
#
CFLAGS = \
  -Fo$@ /I. /W3 /c \
  /DWINCEOEM /DWINCEINTERNAL \
  /DUNDER_CE=500 /D_WIN32_WCE=500 /DWIN32 /DSTRICT \
  /DUNICODE /D_UNICODE /DINTERNATIONAL /DL0409 /DINTLMSG_CODEPAGE=1252
!IF "$(WINCEDEBUG)"=="debug"
CFLAGS = $(CFLAGS) /GF /Od /Zi /DDEBUG=1
!ELSE
CFLAGS = $(CFLAGS) /Gy /Ox /Os /GF /Zi
!ENDIF

#
# LINKER FLAGS
#
LFLAGS = $(LFLAGS) \
  /SUBSYSTEM:WINDOWSCE,5.00 \
  /NODEFAULTLIB \
  /INCREMENTAL:NO \
  /PDB:$*.pdb \
  /DEBUG \
  /DEBUGTYPE:CV \

#
# LINKER FLAGS FOR EXE FILES
#
EXEFLAGS = \
  /ENTRY:mainACRTStartup \
  /BASE:0x00010000 \

#
# INCLUDE DIRECTORIES
#
INCLUDES = \
  $(_SDKROOT)\CE\inc; \
  $(_PUBLICROOT)\common\sdk\inc; \
  $(_PUBLICROOT)\common\oak\inc; \
  $(_PUBLICROOT)\common\ddk\inc; \
  $(VIVANTE_SDK_INC);$(AQROOT)/sdk/inc; \
  $(ROOT_DIR)\common; \

#
# TARGET LIBRARIES
#
TARGETLIBS = \
  $(_PROJECTROOT)\cesysgen\sdk\lib\$(_TGTCPU)\$(WINCEDEBUG)\coredll.lib \
  $(_PROJECTROOT)\cesysgen\sdk\lib\$(_TGTCPU)\$(WINCEDEBUG)\corelibc.lib \
  $(GCLIB_PATH)\libEGL.lib \
  $(GCLIB_PATH)\libVDK.lib \
  $(GCLIB_PATH)\libGLESv2.lib \

# VDK SAMPLES DIRECTORY
COMMON_DIR = Common
SAMPLE1 = sample1
SAMPLE2 = sample2
SAMPLE3 = sample3
SAMPLE4 = sample4
SAMPLE5 = sample5
SAMPLE6 = sample6
SAMPLE7 = sample7
SAMPLE8 = sample8
SAMPLE9 = sample9
SAMPLE10 = sample10

#
# OUTPUT DIRECTORY
#
OUT = obj\$(_TGTCPU)\$(WINCEDEBUG)
OUT_COMMON = $(OUT)\$(COMMON_DIR)
OUT_SAMPLE1 = $(OUT)\$(SAMPLE1)
OUT_SAMPLE2 = $(OUT)\$(SAMPLE2)
OUT_SAMPLE3 = $(OUT)\$(SAMPLE3)
OUT_SAMPLE4 = $(OUT)\$(SAMPLE4)
OUT_SAMPLE5 = $(OUT)\$(SAMPLE5)
OUT_SAMPLE6 = $(OUT)\$(SAMPLE6)
OUT_SAMPLE7 = $(OUT)\$(SAMPLE7)
OUT_SAMPLE8 = $(OUT)\$(SAMPLE8)
OUT_SAMPLE9 = $(OUT)\$(SAMPLE9)
OUT_SAMPLE10 = $(OUT)\$(SAMPLE10)


OUT_PLATFORM = $(_FLATRELEASEDIR)\samples_es20

!IF [mkdir $(OUT_COMMON)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE1)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE2)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE3)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE4)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE5)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE6)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE7)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE8)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE9)]
!ENDIF
!IF [mkdir $(OUT_SAMPLE10)]
!ENDIF
!IF [mkdir $(OUT_PLATFORM)]
!ENDIF

#
# TARGETS TO BUILD
#
TARGETS = \
  $(OUT_PLATFORM)\vdksample1_es20.exe \
  $(OUT_PLATFORM)\vdksample2_es20.exe \
  $(OUT_PLATFORM)\vdksample3_es20.exe \
  $(OUT_PLATFORM)\vdksample4_es20.exe \
  $(OUT_PLATFORM)\vdksample5_es20.exe \
  $(OUT_PLATFORM)\vdksample6_es20.exe \
  $(OUT_PLATFORM)\vdksample7_es20.exe \
  $(OUT_PLATFORM)\vdksample8_es20.exe \
  $(OUT_PLATFORM)\vdksample9_es20.exe \
  $(OUT_PLATFORM)\vdksample10_es20.exe \

################################################################################
#
# DEFAULT TARGET
#
all : $(TARGETS)

################################################################################
#
# Common defines
#

CFLAGS = $(CFLAGS) -DGL_GLEXT_PROTOTYPES -DUSE_VDK=1 -D$(PROFILE)

#
# C COMMAND LINE
#
COMMAND_LINE = $(CFLAGS) -I$(INCLUDES:;= -I) $(CPUFLAGS)



################################################################################
#
# vdksamples common
#

#
# OBJECT FILES FOR common library
#
COMMON_OBJECTS = \
  $(OUT_COMMON)\vdk_sample_common.obj \

#
# MAKE RULES FOR SAMPLE1 OBJECT FILES
#
{$(ROOT_DIR)/$(COMMON_DIR)}.c{$(OUT_COMMON)}.obj :
  cl -nologo $(COMMAND_LINE) $<


################################################################################
#
# vdksample1_es20.exe
#

#
# OBJECT FILES FOR SAMPLE1
#
SAMPLE1_OBJECTS = \
  $(OUT_SAMPLE1)\blend.obj \
  $(OUT_SAMPLE1)\teapot.obj \
  $(OUT_SAMPLE1)\sphere.obj \
  $(OUT_SAMPLE1)\main.obj \

#
# MAKE RULES FOR SAMPLE1 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE1)}.c{$(OUT_SAMPLE1)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample1_es20.exe
#
$(OUT_SAMPLE1)\vdksample1_es20.exe : $(COMMON_OBJECTS) $(SAMPLE1_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample1_es20.exe: $(OUT_SAMPLE1)\vdksample1_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE1)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE1)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE1)\*.bmp $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE1)\*.txt $(OUT_PLATFORM)

################################################################################
#
# vdksample2_es20.exe
#

#
# OBJECT FILES FOR SAMPLE2
#
SAMPLE2_OBJECTS = \
  $(OUT_SAMPLE2)\2d_texture.obj \
  $(OUT_SAMPLE2)\main.obj \

#
# MAKE RULES FOR SAMPLE2 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE2)}.c{$(OUT_SAMPLE2)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample2_es20.exe
#
$(OUT_SAMPLE2)\vdksample2_es20.exe : $(COMMON_OBJECTS) $(SAMPLE2_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample2_es20.exe: $(OUT_SAMPLE2)\vdksample2_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE2)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE2)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE2)\*.bmp $(OUT_PLATFORM)

################################################################################
#
# vdksample3_es20.exe
#

#
# OBJECT FILES FOR SAMPLE3
#
SAMPLE3_OBJECTS = \
  $(OUT_SAMPLE3)\snake.obj \
  $(OUT_SAMPLE3)\snake_main.obj \

#
# MAKE RULES FOR SAMPLE3 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE3)}.c{$(OUT_SAMPLE3)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample3_es20.exe
#
$(OUT_SAMPLE3)\vdksample3_es20.exe : $(COMMON_OBJECTS) $(SAMPLE3_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample3_es20.exe: $(OUT_SAMPLE3)\vdksample3_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE3)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE3)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE3)\*.bmp $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE3)\*.txt $(OUT_PLATFORM)

################################################################################
#
# vdksample4_es20.exe
#

#
# OBJECT FILES FOR SAMPLE4
#
SAMPLE4_OBJECTS = \
  $(OUT_SAMPLE4)\segment_main.obj \
  $(OUT_SAMPLE4)\segment.obj \

#
# MAKE RULES FOR SAMPLE4 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE4)}.c{$(OUT_SAMPLE4)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample4_es20.exe
#
$(OUT_SAMPLE4)\vdksample4_es20.exe : $(COMMON_OBJECTS) $(SAMPLE4_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample4_es20.exe: $(OUT_SAMPLE4)\vdksample4_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE4)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE4)\*.vert $(OUT_PLATFORM)

################################################################################
#
# vdksample5_es20.exe
#

#
# OBJECT FILES FOR SAMPLE5
#
SAMPLE5_OBJECTS = \
  $(OUT_SAMPLE5)\sphere.obj \
  $(OUT_SAMPLE5)\main.obj \

#
# MAKE RULES FOR SAMPLE5 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE5)}.c{$(OUT_SAMPLE5)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample5_es20.exe
#
$(OUT_SAMPLE5)\vdksample5_es20.exe : $(COMMON_OBJECTS) $(SAMPLE5_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample5_es20.exe: $(OUT_SAMPLE5)\vdksample5_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE5)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE5)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE5)\*.bmp $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE5)\*.txt $(OUT_PLATFORM)

################################################################################
#
# vdksample6_es20.exe
#

#
# OBJECT FILES FOR SAMPLE6
#
SAMPLE6_OBJECTS = \
  $(OUT_SAMPLE6)\bounce_main.obj \
  $(OUT_SAMPLE6)\ball.obj \
  $(OUT_SAMPLE6)\terrain.obj \

#
# MAKE RULES FOR SAMPLE6 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE6)}.c{$(OUT_SAMPLE6)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample6_es20.exe
#
$(OUT_SAMPLE6)\vdksample6_es20.exe : $(COMMON_OBJECTS) $(SAMPLE6_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample6_es20.exe: $(OUT_SAMPLE6)\vdksample6_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE6)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE6)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE6)\*.bmp $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE6)\*.txt $(OUT_PLATFORM)

################################################################################
#
# vdksample7_es20.exe
#

#
# OBJECT FILES FOR SAMPLE7
#
SAMPLE7_OBJECTS = \
  $(OUT_SAMPLE7)\slide.obj \
  $(OUT_SAMPLE7)\slide_main.obj \

#
# MAKE RULES FOR SAMPLE3 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE7)}.c{$(OUT_SAMPLE7)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample7_es20.exe
#
$(OUT_SAMPLE7)\vdksample7_es20.exe : $(COMMON_OBJECTS) $(SAMPLE7_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample7_es20.exe: $(OUT_SAMPLE7)\vdksample7_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE7)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE7)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE7)\*.bmp $(OUT_PLATFORM)

################################################################################
#
# vdksample8_es20.exe
#

#
# OBJECT FILES FOR SAMPLE8
#
SAMPLE8_OBJECTS = \
  $(OUT_SAMPLE8)\main.obj \

#
# MAKE RULES FOR SAMPLE8 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE8)}.c{$(OUT_SAMPLE8)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample8_es20.exe
#
$(OUT_SAMPLE8)\vdksample8_es20.exe : $(COMMON_OBJECTS) $(SAMPLE8_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample8_es20.exe: $(OUT_SAMPLE8)\vdksample8_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE8)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE8)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE8)\*.txt $(OUT_PLATFORM)

################################################################################
#
# vdksample9_es20.exe
#

#
# OBJECT FILES FOR SAMPLE9
#
SAMPLE9_OBJECTS = \
  $(OUT_SAMPLE9)\plastic.obj \
  $(OUT_SAMPLE9)\plastic_main.obj \

#
# MAKE RULES FOR SAMPLE9 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE9)}.c{$(OUT_SAMPLE9)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample9_es20.exe
#
$(OUT_SAMPLE9)\vdksample9_es20.exe : $(COMMON_OBJECTS) $(SAMPLE9_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample9_es20.exe: $(OUT_SAMPLE9)\vdksample9_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE9)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE9)\*.vert $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE9)\*.txt $(OUT_PLATFORM)

################################################################################
#
# vdksample10_es20.exe
#

#
# OBJECT FILES FOR SAMPLE10
#
SAMPLE10_OBJECTS = \
  $(OUT_SAMPLE10)\test_main.obj

#
# MAKE RULES FOR SAMPLE10 OBJECT FILES
#
{$(ROOT_DIR)/$(SAMPLE10)}.c{$(OUT_SAMPLE10)}.obj :
  cl -nologo $(COMMAND_LINE) $<

#
# MAKE RULE FOR vdksample10_es20.exe
#
$(OUT_SAMPLE10)\vdksample10_es20.exe : $(COMMON_OBJECTS) $(SAMPLE10_OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vdksample10_es20.exe: $(OUT_SAMPLE10)\vdksample10_es20.exe
  copy /y $** $@
  copy /y $(ROOT_DIR)\$(SAMPLE10)\*.frag $(OUT_PLATFORM)
  copy /y $(ROOT_DIR)\$(SAMPLE10)\*.vert $(OUT_PLATFORM)

################################################################################
#
# clean
#

clean :
  -del /q $(TARGETS)
  -del /q $(OUT)\*.*
  -del /q $(OUT_SAMPLE1)\*.*
  -del /q $(OUT_SAMPLE2)\*.*
  -del /q $(OUT_SAMPLE3)\*.*
  -del /q $(OUT_SAMPLE4)\*.*
  -del /q $(OUT_SAMPLE5)\*.*
  -del /q $(OUT_SAMPLE6)\*.*
  -del /q $(OUT_SAMPLE7)\*.*
  -del /q $(OUT_SAMPLE8)\*.*
  -del /q $(OUT_SAMPLE9)\*.*
  -del /q /s $(OUT_PLATFORM)\*.*
